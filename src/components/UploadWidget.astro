---
import { CldUploadWidget } from 'astro-cloudinary';
---

<CldUploadWidget 
  signatureEndpoint="/api/sign-cloudinary-params"
  uploadPreset="ml_default"
  id="upload-events"
  options={{
    sources: ['local', 'url', 'camera'],
    multiple: false,
    maxFiles: 1,
    folder: "Prueba",
    styles: {
      palette: {
        window: "#1A202C",
        windowBorder: "#FF6B00",
        tabIcon: "#FF6B00",
        menuIcons: "#FF6B00",
        textDark: "#FFFFFF",
        textLight: "#F7FAFC",
        link: "#FF6B00",
        action: "#FF6B00",
        inactiveTabIcon: "#4A5568",
        error: "#F56565",
        inProgress: "#FF6B00",
        complete: "#48BB78",
        sourceBg: "#2D3748"
      },
      fonts: {
        default: {
          active: true,
          url: null,
          family: "Creepster, sans-serif",
          size: "14px"
        }
      }
    }
  }}>
  <button class="bg-purple-800 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300 ease-in-out 
  border-2 border-orange-400 hover:border-orange-600 
  font-halloween">
    ðŸŽƒ Upload Image ðŸŽƒ
  </button>
</CldUploadWidget>

<script client:load>
  document.addEventListener('DOMContentLoaded', () => {
    const widget = document.querySelector('#upload-events');
    if (widget) {
      widget.addEventListener('clduploadwidget:success', async (e) => {
        const { detail } = e;
        const { info } = detail;
        
        if (info && info.secure_url) {
          console.log('Image URL:', info.secure_url);
          try {
            const response = await fetch('/api/analyze-image', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                uri: info.secure_url
              })
            });
    
            const data = await response.json();
            console.log('AI Vision Analysis:', data);
          } catch (error) {
            console.error('Error during AI Vision analysis:', error);
          }
        }
      });
    }
  });
</script>